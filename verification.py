import discord
import sqlite3
import sys
import os,binascii
import datetime
import random
from random import randint
from discord.ext import commands
import asyncio
import time

client = commands.Bot(command_prefix = '.')
db_conn = sqlite3.connect('verifi.db')
dbcursor = db_conn.cursor()

id = None
code = None
name = None


def createCode(code, name):
    db_conn.execute("INSERT INTO vertable (VCODE, VNAME) VALUES (?,?)",(int(code),str(name)))
    db_conn.commit()

@client.event
@asyncio.coroutine
def on_ready():
    print("VERIFICATIONBOT IS READY")
    
@client.command()
@asyncio.coroutine
def createcode(ctx):
    for role in ctx.author.roles:
        if role.name == "Verified":
            rcode = random.randint(10000, 99999)        
            e = discord.Embed(title="VerificationB0T", color=0x4b5b75)
            e.add_field(name="VerificationC0DE:", value=rcode, inline=True)
            e.add_field(name="Generated by:", value=ctx.author, inline=False)
            
            log = discord.Embed(title="VerificationB0T LOG", color=0x4b5b75)
            log.add_field(name="VerificationC0DE:", value=rcode, inline=True)
            log.add_field(name="Generated by:", value=ctx.author, inline=False)
            log.add_field(name="Generated on:", value=datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"), inline=False)
            
            createCode(rcode, ctx.author)
            extract = dbcursor.execute("SELECT ID FROM vertable")
            temp = None
            for row in extract:
                temp = row[0]                 
            log.add_field(name="Database ID:", value=temp, inline=False)
            channel = client.get_channel(465892286648156170)
            yield from channel.send(embed=log)
            yield from ctx.send(embed=e)
        
@client.command()
@asyncio.coroutine
def verify(ctx, verifycode):
    for role in ctx.author.roles:
        if role.name == "Verified":
            yield from ctx.send(ctx.author.mention + ", you're already verified!")
        else:
            data = dbcursor.execute("SELECT * FROM vertable WHERE VCODE = ?", (verifycode,))
            temp = None
            user = ctx.message.author
            for row in data:
                temp = row[1]
            print("Trying to verify user: ", ctx.author)
            if(str(verifycode) == str(temp)):
                for role in ctx.author.roles:
                    if not role.name == "Verified":    
                        embed=discord.Embed(title="VERIFICATIONB0T", color=0x1ff913)
                        embed.add_field(name="Sucessfully verified (づ｡◕‿‿◕｡)づ", value=user, inline=True)
                        role = discord.utils.get(ctx.guild.roles, name="Verified")
                        user = ctx.message.author
                        yield from user.add_roles(role)    
                        yield from ctx.send(embed=embed)
                        try:
                            db_conn.execute("DELETE FROM vertable WHERE VCODE=?", (verifycode,))
                            print("Verification code has been removed.")
                        except sqlite3.OperationalError:
                            print("Couldn't delete code from table! :o")                        
                    else:
                        yield from ctx.send(ctx.author.mention + ", you're already verified!")
client.run('NDY1ODg3NzU5ODA3MjgzMjAx.DiUDuw.dHUcpa1V8ZgeqB9T5PgeB72suAE')


    
